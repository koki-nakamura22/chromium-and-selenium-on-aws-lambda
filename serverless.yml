service: selenium-on-aws-lambda

frameworkVersion: '2'

provider:
  name: aws
  stage: ${opt:stage, "dev"}
  runtime: python3.7
  lambdaHashingVersion: 20201221
  profile: serverless-admin
  region: ap-northeast-1
  deploymentBucket:
    name: selenium-on-aws-lambda-deployment-bucket
    maxPreviousDeploymentArtifacts: 3

package:
  individually: true
  exclude:
    - README.md
    - requirements.txt
    - layers/**
    - layers.zip

layers:
  chromedriver:
    name: chromedriver
    description: A chromedriver and a headless-chromium binary files.
    path: layers/chromedriver
    compatibleRuntimes: ${self:provider.runtime}
  selenium:
    name: selenium
    description: v 3.14.0
    path: layers/selenium
    compatibleRuntimes: ${self:provider.runtime}

functions:
  func:
    handler: handler.func
    memorySize: 1024
    timeout: 300
    layers:
      - { Ref: ChromedriverLambdaLayer }
      - { Ref: SeleniumLambdaLayer }
    role: LambdaS3PutObject

resources:
  Resources:
    LambdaS3PutObject:
      Type: AWS::IAM::Role
      Properties:
        RoleName: LambdaS3PutObject
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: LambdaS3PutObjectPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - "logs:CreateLogGroup"
                    - "logs:CreateLogStream"
                    - "logs:PutLogEvents"
                    - "s3:PutObject*"
                  Resource:
                    - "arn:aws:logs:*:*:log-group:/aws/*"
                    - "arn:aws:s3:::selenium-on-aws-lambda-screenshots/*"
